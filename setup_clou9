Argo
curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.1.5/argo-linux-amd64.gz
gunzip argo-linux-amd64.gz
chmod +x argo-linux-amd64
sudo mv ./argo-linux-amd64 /usr/local/bin/argo

Kubectl
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

Eksctl
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin

AWS CLI
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

eksctl utils write-kubeconfig --cluster=argo-k8s --region=us-east-1

rm -vf ${HOME}/.aws/credentials

JQ
sudo yum -y install jq gettext bash-completion moreutils

Create Namespace and set SEC for that namespace
kubectl create namespace <name>
kubectl create rolebinding <any name> --clusterrole=admin --serviceaccount=<namespace-name>:default
kubectl create clusterrolebinding <any name> --clusterrole=admin --serviceaccount=<namespace-name>:default
kubectl config set-context --current --namespace=<your namespace>

aws sts get-caller-identity

git clone https://github.com/jwkidd3/argo

docker login 
user: jwkidd3
password: <in chat>

kubectl create secret generic regcred --from-file=.dockerconfigjson=/home/ec2-user/.docker/config.json> --type=kubernetes.io/dockerconfigjson
kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "regcred"}]}'
